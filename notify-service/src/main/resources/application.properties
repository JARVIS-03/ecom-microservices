
server.port=8081

spring.application.name=notification-service
#postgresql

eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true

#replace with your username,password and db name

#postgres
#spring.datasource.url=jdbc:postgresql://localhost:5432/notification_db
#spring.datasource.username=postgres
#spring.datasource.password=nive123

#dockerized postgres
spring.datasource.url=jdbc:postgresql://localhost:5433/ecom-db
spring.datasource.username=admin
spring.datasource.password=admin

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#Spring mail resource [Using App password]
spring.mail.host=smtp.gmail.com
spring.mail.port=587

spring.mail.username=ecommercesamp@gmail.com
spring.mail.password=

spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

#Circuit Breaker Properties
resilience4j.circuitbreaker.instances.serviceFallback.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.serviceFallback.eventConsumerBufferSize=10
resilience4j.circuitbreaker.instances.serviceFallback.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.serviceFallback.failureRateThreshold=50
resilience4j.circuitbreaker.instances.serviceFallback.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.serviceFallback.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.serviceFallback.slidingWindowSize=10
resilience4j.circuitbreaker.instances.serviceFallback.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.serviceFallback.slidingWindowType=COUNT_BASED

#Actuator Configuration
management.endpoints.web.exposure.include=health,circuitbreakers
management.endpoint.health.show-details=always

#logging
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n

# Kafka broker address
spring.kafka.bootstrap-servers=localhost:9092

# Consumer config
spring.kafka.consumer.group-id=notification-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.ecom_microservices.notify_service.dto

spring.kafka.consumer.properties.spring.json.value.default.type=com.ecom_microservices.notify_service.dto.KafkaRequest

# Producer config
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Custom topic name
kafka.request.topic=notification-request
kafka.response.topic=notification-response

