# ===============================
# =       Server Config         =
# ===============================
server.port=8081
spring.application.name=notification-service

# ===============================
# =      Eureka Discovery       =
# ===============================
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true

# ===============================
# =      PostgreSQL Config      =
# ===============================
# Local PostgreSQL DB
#spring.datasource.url=jdbc:postgresql://localhost:5432/notification_db
#spring.datasource.username=postgres
#spring.datasource.password=nive123

# Dockerized PostgreSQL (uncomment to use)
 spring.datasource.url=jdbc:postgresql://localhost:5432/ecom-db
 spring.datasource.username=postgres
 spring.datasource.password=root

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# ===============================
# =       Mail Config           =
# ===============================
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=mukeshnkl1777@gmail.com
spring.mail.password=lvjwdvgseehzrmma
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# ===============================
# =   Resilience4j CircuitBreaker  =
# ===============================
resilience4j.circuitbreaker.instances.serviceFallback.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.serviceFallback.eventConsumerBufferSize=10
resilience4j.circuitbreaker.instances.serviceFallback.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.serviceFallback.failureRateThreshold=50
resilience4j.circuitbreaker.instances.serviceFallback.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.serviceFallback.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.serviceFallback.slidingWindowSize=10
resilience4j.circuitbreaker.instances.serviceFallback.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.serviceFallback.slidingWindowType=COUNT_BASED

# ===============================
# =   Spring Boot Actuator      =
# ===============================
management.endpoints.web.exposure.include=health,circuitbreakers
management.endpoint.health.show-details=always

# ===============================
# =         Kafka Config        =
# ===============================
spring.kafka.bootstrap-servers=localhost:9092

# Consumer
spring.kafka.consumer.group-id=notification-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
# spring.kafka.consumer.properties.spring.json.use.type.headers=false
# spring.kafka.consumer.properties.spring.json.value.default.type=com.ecom_microservices.notify_service.dto.NotificationPaymentDTO

spring.kafka.consumer.properties.spring.json.value.default.type=com.ecom_microservices.notify_service.dto.OrderDTO
spring.kafka.consumer.properties.spring.json.use.type.headers=true

# Producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Custom Topics
kafka.request.payment.topic=notification-topic
kafka.request.order.topic=notification-order-topic
kafka.response.payment.topic=notification-topic-response
kafka.response.order.topic=notification-order-topic-response

# ===============================
# =         Logging             =
# ===============================
# Console log pattern
# logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n

# File log output
# logging.file.name=C:/ecom-microservices/logs/notification-service.log


# Log levels
# logging.level.root=INFO
# Optionally, for your package
# logging.level.com.ecom_microservices.notify_service=DEBUG
